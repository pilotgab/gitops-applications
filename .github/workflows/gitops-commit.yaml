name: Argo CD application commit
run-name: Trigger deploy of ${{ inputs.repo_name }} to ${{ inputs.environment }}
on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: 'commit id to set for deployment new image'
        required: true
        type: string
      repo_name:
        description: 'Repo to overwrite file'
        required: false
        type: string
      environment:
        description: 'Folder to lookup for update'
        required: false
        default: 'dev'
        type: string
      runner-label:
        description: 'Assign custom runner to this workflow'
        required: false
        type: string
        default: 'ubuntu-latest'
permissions:
  id-token: write
  contents: write
  actions: write


concurrency: gitops-${{ github.event.inputs.repo_name }}-${{ github.event.inputs.environment }}

jobs:
  deployment-image:
    runs-on: ['${{ inputs.runner-label }}']
    steps:
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: 405974
          private_key: ${{ secrets.GH_PRIVATE_KEY }}


      - uses: actions/checkout@v3
        with:
          ref: dev
          token: ${{ steps.generate_token.outputs.token }}

      - name: Install yq
        run: |
          curl -L -O https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz && \
          tar -xzf ${BINARY}.tar.gz && sudo mv ${BINARY} /usr/bin/yq
        env:
          VERSION: v4.34.1
          BINARY: yq_linux_amd64

      - name: Set new image to values-${{ inputs.repo_name }}.yaml
        run: |
          yq -i '.image.tag = "${{ inputs.commit_id }}"' ${{ inputs.environment }}/config/pilotgab-appset/values-${{ inputs.repo_name }}.yaml

      - name: Commit changes
        id: commit
        continue-on-error: true
        uses: EndBug/add-and-commit@v9
        with:
          cwd: ./${{ inputs.environment }}/config/pilotgab-appset
          add: values-${{ inputs.repo_name }}.yaml
          fetch: false
          push: true
          pull: '--rebase --autostash'
          message: '${{ inputs.environment }}: new deployment of ${{ inputs.repo_name }} with image ${{ inputs.commit_id }}'

      - name: Retry Commit changes
        id: retry-commit
        if: ${{ steps.commit.outcome == 'failure' }}
        run: |
          git pull origin dev --rebase && git push origin dev

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        if: ${{ failure() && steps.retry-commit.conclusion == 'failure' }}
        with:
          channel-id: '8061SR4A637'
          payload: |
            {
                "text": "Gitops pipeline failed to complete",
                "blocks": [
                    {
                        "type": "header",
                        "text": {
                            "type": "plain_text",
                            "text": "üö® Gitops Argo CD application commit failed! üö®",
                            "emoji": true
                        }
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "*Commit message:* ${{ github.event.head_commit.message }}"
                        }
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "*Author:* ${{ github.actor }}"
                        }
                    },
                    {
                        "type": "actions",
                        "elements": [
                            {
                                "type": "button",
                                "text": {
                                    "type": "plain_text",
                                    "text": "GitHub Action run ‚òÅÔ∏è",
                                    "emoji": true
                                },
                                "style": "primary",
                                "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                            }
                        ]
                    }
                ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


          
